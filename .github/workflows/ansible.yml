name: Ansible Configuration Management

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'ansible/**'
      - 'terraform/**/*.tf'
      - '.github/workflows/ansible.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'ansible/**'
      - 'terraform/**/*.tf'
      - '.github/workflows/ansible.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-lint

      - name: Run ansible-lint
        run: |
          ansible-lint ansible/

  ansible-syntax-check:
    name: Ansible Syntax Check
    runs-on: ubuntu-latest
    needs: ansible-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible pyyaml

      - name: Run syntax check
        run: |
          for playbook in ansible/playbooks/*/site.yml; do
            ansible-playbook --syntax-check $playbook -i ansible/inventory
          done

  terraform-ansible-integration:
    name: Terraform Ansible Integration
    runs-on: ubuntu-latest
    needs: ansible-syntax-check
    if: github.event_name == 'workflow_dispatch'
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible pyyaml

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform/$ENVIRONMENT
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/$ENVIRONMENT
          terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          cd terraform/$ENVIRONMENT
          terraform apply -auto-approve tfplan

      - name: Run Terraform Ansible Integration
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          ./scripts/terraform_ansible_integration.sh --env $ENVIRONMENT --check-only

      - name: Apply Ansible Configuration
        if: github.ref == 'refs/heads/main'
        run: |
          ./scripts/terraform_ansible_integration.sh --env $ENVIRONMENT 
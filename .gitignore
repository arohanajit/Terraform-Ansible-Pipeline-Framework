# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*
*.tfplan

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Terraform provider lock files
.terraform.lock.hcl

# Terraform backend configuration
backend.tf

# Terraform specific
terraform/.terraform/
terraform/terraform.tfvars
terraform/terraform.tfstate.backup
terraform/terraform.tfstate.d/
terraform/.terraform.lock.hcl

# Ansible
*.retry
ansible/*.log
ansible/*.err
ansible/__pycache__/
ansible/roles/**/__pycache__/
ansible/collections/
ansible/inventory/hosts.yml
ansible/vault_password_file
ansible/inventory/**/host_vars/
ansible/inventory/**/group_vars/
ansible/*.vault
ansible/roles/*/files/secrets/
ansible/galaxy_roles/

# Environment files
.env
*.env
.env.*
!.env.example

# Secrets
*secrets*
*.key
*.pem
*.crt
*.pub
id_rsa*
known_hosts
*password*
*credential*
*secret*
*token*

# CI/CD specific
.jenkins/
.cache/
.coverage
reports/
.idea/
.vscode/
*.swp
.gitlab-ci-local/
.github/workflows/.secrets/

# OS specific
.DS_Store
Thumbs.db
.directory
desktop.ini

# Logs
*.log
logs/
log/

# Temporary files
*.tmp
*.bak
*~
*.swp
*.swo

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
venv/
.venv/
ENV/

# Node.js
node_modules/
npm-debug.log
yarn-debug.log
yarn-error.log
.npm/
.yarn/

# Testing
.coverage
htmlcov/
.tox/
.nox/
.hypothesis/
.pytest_cache/
